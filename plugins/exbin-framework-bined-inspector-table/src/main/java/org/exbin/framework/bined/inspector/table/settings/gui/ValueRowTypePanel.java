/*
 * Copyright (C) ExBin Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.exbin.framework.bined.inspector.table.settings.gui;

import java.awt.Component;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;
import javax.annotation.Nonnull;
import javax.annotation.Nullable;
import javax.annotation.ParametersAreNonnullByDefault;
import javax.swing.DefaultListCellRenderer;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import org.exbin.framework.App;
import org.exbin.framework.bined.inspector.table.api.ValueRowType;
import org.exbin.framework.language.api.LanguageModuleApi;
import org.exbin.framework.utils.WindowUtils;
import org.exbin.framework.utils.TestApplication;
import org.exbin.framework.utils.UtilsModule;

/**
 * Value row type panel.
 *
 * @author ExBin Project (https://exbin.org)
 */
@ParametersAreNonnullByDefault
public class ValueRowTypePanel extends javax.swing.JPanel {

    private final java.util.ResourceBundle resourceBundle = App.getModule(LanguageModuleApi.class).getBundle(ValueRowTypePanel.class);

    private Map<String, ValueRowType> valueRowTypes;

    public ValueRowTypePanel() {
        initComponents();
        init();
    }

    private void init() {
        rowsList.setModel(new DefaultListModel<>());
        rowsList.setCellRenderer(new DefaultListCellRenderer() {
            @Override
            public Component getListCellRendererComponent(JList<?> list, @Nullable Object value, int index, boolean isSelected, boolean cellHasFocus) {
                if (value == null) {
                    return super.getListCellRendererComponent(list, null, index, isSelected, cellHasFocus);
                }

                ValueRowType valueRowType = valueRowTypes.get(value);
                return super.getListCellRendererComponent(list, valueRowType.getName(), index, isSelected, cellHasFocus);
            }
        });
    }

    @Nonnull
    public ResourceBundle getResourceBundle() {
        return resourceBundle;
    }

    @Nullable
    public String getSelectedItem() {
        int selectedIndex = rowsList.getSelectedIndex();
        return selectedIndex < 0 ? null : rowsList.getModel().getElementAt(selectedIndex);
    }

    public void setRowTypes(Map<String, ValueRowType> valueRowTypes) {
        this.valueRowTypes = valueRowTypes;
    }
    
    @Nonnull
    public List<String> getSelectedItems() {
        int[] selectedIndices = rowsList.getSelectedIndices();
        List<String> typeIds = new ArrayList<>();
        DefaultListModel<String> model = (DefaultListModel<String>) rowsList.getModel();
        for (int i = 0; i < selectedIndices.length; i++) {
            typeIds.add(model.getElementAt(selectedIndices[i]));
        }
        return typeIds;
    }

    public void setItems(List<String> typeIds) {
        DefaultListModel<String> model = (DefaultListModel<String>) rowsList.getModel();
        model.removeAllElements();
        for (String typeId : typeIds) {
            model.addElement(typeId);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rowsLabel = new javax.swing.JLabel();
        rowsListScrollPane = new javax.swing.JScrollPane();
        rowsList = new javax.swing.JList<>();

        rowsLabel.setText(resourceBundle.getString("rowsLabel.text")); // NOI18N

        rowsListScrollPane.setViewportView(rowsList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rowsListScrollPane)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rowsLabel)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rowsLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rowsListScrollPane)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Test method for this panel.
     *
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        TestApplication testApplication = UtilsModule.createTestApplication();
        testApplication.launch(() -> {
            testApplication.addModule(org.exbin.framework.language.api.LanguageModuleApi.MODULE_ID, new org.exbin.framework.language.api.utils.TestLanguageModule());
            WindowUtils.invokeWindow(new ValueRowTypePanel());
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel rowsLabel;
    private javax.swing.JList<String> rowsList;
    private javax.swing.JScrollPane rowsListScrollPane;
    // End of variables declaration//GEN-END:variables

}
