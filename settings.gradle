rootProject.name = 'bined'

include ":deps"

include ":modules:exbin-framework-bined"
include ":modules:exbin-framework-bined-launcher"
include ":modules:exbin-framework-bined-search"
include ":modules:exbin-framework-bined-operation"
include ":modules:exbin-framework-bined-inspector"
include ":modules:exbin-framework-bined-objectdata"
include ":modules:exbin-framework-bined-viewer"
include ":modules:exbin-framework-bined-editor"
include ":modules:exbin-framework-bined-theme"
include ":modules:exbin-framework-bined-print"
include ":modules:exbin-framework-bined-legacy"
include ":plugins:exbin-framework-bined-bookmarks"
include ":plugins:exbin-framework-bined-compare"
include ":plugins:exbin-framework-bined-macro"
include ":plugins:exbin-framework-bined-tool-content"
include ":plugins:exbin-framework-bined-operation-bouncycastle"
include ":plugins:exbin-framework-bined-operation-code"
include ":plugins:exbin-framework-bined-help"
include ":plugins:exbin-framework-bined-inspector-pixelmap"
include ":plugins:exbin-framework-bined-inspector-table"
include ":apps:bined-editor"

File placeholder = file("deps/.downloaded")
if (placeholder.exists()) {
    placeholder.delete()
}

if (!gradle.startParameter.taskNames.contains("clean") || gradle.startParameter.projectProperties.containsKey("moduleDep")) {
    File depsDir = file("deps")
    // Include all downloaded dependency modules
    depsDir.listFiles().each() { childFile ->
        if (childFile.isDirectory() && childFile.name != ".gradle") {
            include ':deps:' + childFile.name
        }
    }
}

gradle.allprojects {
  ext {
    depsRoot = 'Bined'
  }
}